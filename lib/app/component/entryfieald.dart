import 'package:flutter/material.dart';
import 'package:flutter/services.dart';

Widget entryField(String title,
    {String? hintText,
    bool hidelabe = false,
    bool isPassword = false,
    String? validate,
    Color? filledcolor,
    TextStyle? hintstyle,
    TextAlign? textAlign,
    TextInputType? keyboardType,
    TextEditingController? Controller,
    InputBorder? inputBorder,
    bool? isDense,
    EdgeInsetsGeometry? contentPadding,
    TextDirection? hintTextDirection,
    InputBorder? focusedBorder,
    InputBorder? enabledBorder,
    int? minLines,
    int? maxLines,
    int? maxLength,
    String? labelText,
    TextStyle? labelStyle,
    TextStyle? style,
    bool isLabel = false,
    bool enabled = true,
    FocusNode? focusNode,
    Function(String)? onChanged,
    String? Function(String?)? validator,
    InputBorder? disabledBorder,
    List<TextInputFormatter>? inputFormatters,
    Widget? suffixIcon,
    InputBorder? errorBorder,
    InputBorder? focusedErrorBorder,
    Widget? prefixIcon}) {
  return TextFormField(
    // textDirection: TextDirection.rtl,

    validator: validator,
    keyboardType: keyboardType,
    minLines: minLines,
    maxLines: maxLines,
    focusNode: focusNode,
    style: style,
    controller: Controller,
    textAlign: textAlign ?? TextAlign.left,
    obscureText: isPassword,
    onChanged: onChanged,
    decoration: InputDecoration(
        enabled: enabled,
        suffixIcon: suffixIcon,
        prefixIcon: prefixIcon,
        isDense: isDense,
        contentPadding: contentPadding,
        border: inputBorder,
        labelText: labelText,
        labelStyle: labelStyle,
        fillColor: filledcolor,
        errorText: validate != "" ? validate : null,
        // fillColor: Colors.grey[700],
        filled: filledcolor != null,
        hintText: isLabel ? null : hintText ?? title,
        hintTextDirection: hintTextDirection ?? TextDirection.ltr,
        hintStyle: hintstyle ??
            TextStyle(
                color: Colors.grey, fontWeight: FontWeight.bold, fontSize: 13),
        focusedBorder: focusedBorder,
        disabledBorder: disabledBorder,
        errorBorder: errorBorder,
        focusedErrorBorder: focusedErrorBorder,
        enabledBorder: enabledBorder),
  );
}
